{
  "name": "sanitize-caja",
  "version": "0.0.0",
  "description": "sanitize html using caja and reasonable assumptions",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "keywords": [
    "sanitize",
    "html"
  ],
  "author": "",
  "license": "BSD-2-Clause",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "mocha": "~1.12.1"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/mapbox/sanitize-caja.png?branch=master)](http://travis-ci.org/mapbox/sanitize-caja)\n\n# sanitize-caja\n\nSanitize HTML content using the [Google Caja JsHtmlSanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer)\nand a set of basic assumptions, and a wrapper to make it all work in nodejs\nwithout global variable leaks and so on.\n\nThis is a slightly 'loosened' version of Caja's restrictions, to allow for\nthings like images, links, and a few HTML5 elements.\n\n## api\n\n### `sanitize(html: string)` -> sanitized string\n\nSanitize a string of HTML content, returning a sanitized string.\n\n## install\n\n    npm install sanitize-caja\n\n## example\n\n```js\nvar sanitize = require('sanitize-caja');\n\ndocument.write(sanitize(evilUserInput));\n```\n\n## see also\n\n* [Google Caja JsHtmlSanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer)\n",
  "readmeFilename": "README.md",
  "_id": "sanitize-caja@0.0.0",
  "dist": {
    "shasum": "71a09a356e9e0c9475ee91baa1ae520d1cb884eb"
  },
  "_from": "sanitize-caja@0.0.0",
  "_resolved": "https://registry.npmjs.org/sanitize-caja/-/sanitize-caja-0.0.0.tgz"
}
