{"_id":"color","_rev":"25-eae3d42cf94bf8c221473169a1d0ce6a","name":"color","description":"Color conversion and manipulation with CSS string support","dist-tags":{"latest":"0.5.0"},"versions":{"0.1.0":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.1.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.1.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"fc7a2b0a9d29888ccad3ddb90d720da7b2157af3","tarball":"http://registry.npmjs.org/color/-/color-0.1.0.tgz"},"scripts":{},"directories":{}},"0.1.1":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.1.1","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.1.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"e4cbdb831a7c3d8956e17c40e0601bf3a54aba8c","tarball":"http://registry.npmjs.org/color/-/color-0.1.1.tgz"},"scripts":{},"directories":{}},"0.1.2":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.1.2","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.1.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.1.2","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"5441638bff8b3198e4e4c431f72bd6b92638df25","tarball":"http://registry.npmjs.org/color/-/color-0.1.2.tgz"},"scripts":{},"directories":{}},"0.1.3":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.1.3","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.1.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.1.3","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"a8f665a758fa1bac29b3a394071232d2d2b81d13","tarball":"http://registry.npmjs.org/color/-/color-0.1.3.tgz"},"scripts":{},"directories":{}},"0.2.0":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.2.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.2.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.2.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"4e53a818e2dcf8df64d24b3fe778060464b17b07","tarball":"http://registry.npmjs.org/color/-/color-0.2.0.tgz"},"scripts":{},"directories":{}},"0.3.0":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.3.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.3.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.3.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"b420ce4a8d9bd51be18ed28d0d1f642abaff4b00","tarball":"http://registry.npmjs.org/color/-/color-0.3.0.tgz"},"scripts":{},"directories":{}},"0.4.0":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.4.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmJsonOpts":{"file":"/Users/harth/.npm/color/0.4.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"color@0.4.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"fa4f5726cbc4c89e834d54a86959d66a48c44919","tarball":"http://registry.npmjs.org/color/-/color-0.4.0.tgz"},"scripts":{},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.4.1":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.4.1","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"_id":"color@0.4.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.30","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"54675771e9aeaf7d9034a0af05e4006e3736b375","tarball":"http://registry.npmjs.org/color/-/color-0.4.1.tgz"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.4.2":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.4.2","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"readme":"# color\n`color` is a JavaScript library for color conversion and manipulation with support for CSS color strings.\n\n```javascript\nvar color = Color(\"#7743CE\");\n\ncolor.alpha(0.5).lighten(0.5);\n\nconsole.log(color.hslString());  // \"hsla(262, 59%, 81%, 0.5)\"\n```\t\n\n## Install\n\n### browser\nDownload the latest [color.js](http://github.com/harthur/color/downloads). The `Color` object is exported.\n\n### node\nFor [node](http://nodejs.org) with [npm](http://npmjs.org):\n\n```bash\nnpm install color\n```\n\nAnd use with `var Color = require(\"color\")`\n\n## API\n\n### Setters\n\n```javascript\nvar color = Color(\"rgb(255, 255, 255)\")\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color().rgb(255, 255, 255)\nvar color = Color().rgb([255, 255, 255])\n```\nPass any valid CSS color string into `Color()` or a hash of values. Also load in color values with `rgb()`, `hsl()`, `hsv()`,and `cmyk()`.\n\n```javascript\ncolor.red(120)\n```\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturation` (hsl), `saturationv` (hsv), `lightness`, `cyan`, `magenta`, `yellow`, `black`\n\n### Getters\n\n\n```javascript\ncolor.rgb()       // {r: 255, g: 255, b: 255}\n```\nGet a hash of the rgb values with `rgb()`, similarly for `hsl()`, `hsv()`, and `cmyk()`\n\n```javascript\ncolor.rgbArray()  // [255, 255, 255]\n```\nGet an array of the values with `rgbArray()`, `hslArray()`, `hsvArray()`, and `cmykArray()`.\n\n```javascript\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n\n```javascript\ncolor.hslString()  // \"hsl(320, 50%, 100%)\"\n```\n\nDifferent CSS String formats for the color are on `hexString`, `rgbString`, `percentString`, `hslString`, and `keyword` (undefined if it's not a keyword color). `\"rgba\"` and `\"hsla\"` are used if the current alpha value of the color isn't `1`.\n\n### Luminosity\n\n```javascript\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```javascript\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```javascript\ncolor.light();  // true\ncolor.dark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n\n```javascript\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.greyscale()      // #5CBF54 -> #969696\n\ncolor.clearer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))   // cyan -> rgb(128, 255, 128)\n\n// chaining\ncolor.green(100).greyscale().lighten(0.6)\n```\n\nAnd more to come...\n\n## Propers\n\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n","_id":"color@0.4.2","dist":{"shasum":"f51271565d27a7661650171fff228639e90b779d","tarball":"http://registry.npmjs.org/color/-/color-0.4.2.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.4.3":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.4.3","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"readme":"# color\n`color` is a JavaScript library for color conversion and manipulation with support for CSS color strings.\n\n```javascript\nvar color = Color(\"#7743CE\");\n\ncolor.alpha(0.5).lighten(0.5);\n\nconsole.log(color.hslString());  // \"hsla(262, 59%, 81%, 0.5)\"\n```\t\n\n## Install\n\n### browser\nDownload the latest [color.js](http://github.com/harthur/color/downloads). The `Color` object is exported.\n\n### node\nFor [node](http://nodejs.org) with [npm](http://npmjs.org):\n\n```bash\nnpm install color\n```\n\nAnd use with `var Color = require(\"color\")`\n\n## API\n\n### Setters\n\n```javascript\nvar color = Color(\"rgb(255, 255, 255)\")\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color().rgb(255, 255, 255)\nvar color = Color().rgb([255, 255, 255])\n```\nPass any valid CSS color string into `Color()` or a hash of values. Also load in color values with `rgb()`, `hsl()`, `hsv()`,and `cmyk()`.\n\n```javascript\ncolor.red(120)\n```\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturation` (hsl), `saturationv` (hsv), `lightness`, `cyan`, `magenta`, `yellow`, `black`\n\n### Getters\n\n\n```javascript\ncolor.rgb()       // {r: 255, g: 255, b: 255}\n```\nGet a hash of the rgb values with `rgb()`, similarly for `hsl()`, `hsv()`, and `cmyk()`\n\n```javascript\ncolor.rgbArray()  // [255, 255, 255]\n```\nGet an array of the values with `rgbArray()`, `hslArray()`, `hsvArray()`, and `cmykArray()`.\n\n```javascript\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n\n```javascript\ncolor.hslString()  // \"hsl(320, 50%, 100%)\"\n```\n\nDifferent CSS String formats for the color are on `hexString`, `rgbString`, `percentString`, `hslString`, and `keyword` (undefined if it's not a keyword color). `\"rgba\"` and `\"hsla\"` are used if the current alpha value of the color isn't `1`.\n\n### Luminosity\n\n```javascript\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```javascript\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```javascript\ncolor.light();  // true\ncolor.dark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n\n```javascript\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.greyscale()      // #5CBF54 -> #969696\n\ncolor.clearer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))   // cyan -> rgb(128, 255, 128)\n\n// chaining\ncolor.green(100).greyscale().lighten(0.6)\n```\n\nAnd more to come...\n\n## Propers\n\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n","readmeFilename":"README.md","_id":"color@0.4.3","dist":{"shasum":"b49f3655b25a76bcab4aa791c9a9b4d8b014ddf4","tarball":"http://registry.npmjs.org/color/-/color-0.4.3.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.4.4":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.4.4","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"browserify":">=1.1.0","uglify-js":"1.0.x"},"keywords":["color","colour","css"],"readme":"# color\n`color` is a JavaScript library for color conversion and manipulation with support for CSS color strings.\n\n```javascript\nvar color = Color(\"#7743CE\");\n\ncolor.alpha(0.5).lighten(0.5);\n\nconsole.log(color.hslString());  // \"hsla(262, 59%, 81%, 0.5)\"\n```\t\n\n## Install\n\n### browser\nDownload the latest [color.js](http://github.com/harthur/color/downloads). The `Color` object is exported.\n\n### node\nFor [node](http://nodejs.org) with [npm](http://npmjs.org):\n\n```bash\nnpm install color\n```\n\nAnd use with `var Color = require(\"color\")`\n\n## API\n\n### Setters\n\n```javascript\nvar color = Color(\"rgb(255, 255, 255)\")\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color().rgb(255, 255, 255)\nvar color = Color().rgb([255, 255, 255])\n```\nPass any valid CSS color string into `Color()` or a hash of values. Also load in color values with `rgb()`, `hsl()`, `hsv()`,and `cmyk()`.\n\n```javascript\ncolor.red(120)\n```\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturation` (hsl), `saturationv` (hsv), `lightness`, `cyan`, `magenta`, `yellow`, `black`\n\n### Getters\n\n\n```javascript\ncolor.rgb()       // {r: 255, g: 255, b: 255}\n```\nGet a hash of the rgb values with `rgb()`, similarly for `hsl()`, `hsv()`, and `cmyk()`\n\n```javascript\ncolor.rgbArray()  // [255, 255, 255]\n```\nGet an array of the values with `rgbArray()`, `hslArray()`, `hsvArray()`, and `cmykArray()`.\n\n```javascript\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n\n```javascript\ncolor.hslString()  // \"hsl(320, 50%, 100%)\"\n```\n\nDifferent CSS String formats for the color are on `hexString`, `rgbString`, `percentString`, `hslString`, and `keyword` (undefined if it's not a keyword color). `\"rgba\"` and `\"hsla\"` are used if the current alpha value of the color isn't `1`.\n\n### Luminosity\n\n```javascript\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```javascript\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```javascript\ncolor.light();  // true\ncolor.dark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n\n```javascript\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.greyscale()      // #5CBF54 -> #969696\n\ncolor.clearer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))   // cyan -> rgb(128, 255, 128)\n\n// chaining\ncolor.green(100).greyscale().lighten(0.6)\n```\n\nAnd more to come...\n\n## Propers\n\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n","readmeFilename":"README.md","_id":"color@0.4.4","dist":{"shasum":"f8bae8a848854616328704e64ce4a94ab336b7b5","tarball":"http://registry.npmjs.org/color/-/color-0.4.4.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.5.0":{"name":"color","description":"Color conversion and manipulation with CSS string support","version":"0.5.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/color.git"},"main":"./color","dependencies":{"color-convert":"0.2.x","color-string":"0.1.x"},"devDependencies":{"nomnom":"~1.5.2","browserify":"~2.18.1","grunt":"~0.4.1","grunt-contrib-uglify":"~0.2.0"},"keywords":["color","colour","css"],"readme":"# color\n`color` is a JavaScript library for color conversion and manipulation with support for CSS color strings.\n\n```javascript\nvar color = Color(\"#7743CE\");\n\ncolor.alpha(0.5).lighten(0.5);\n\nconsole.log(color.hslString());  // \"hsla(262, 59%, 81%, 0.5)\"\n```\t\n\n## Install\n\n### browser\nDownload the latest [color.js](https://github.com/harthur/color/tree/gh-pages). The `Color` object is exported.\n\n### node\nFor [node](http://nodejs.org) with [npm](http://npmjs.org):\n\n```bash\nnpm install color\n```\n\nAnd use with `var Color = require(\"color\")`\n\n## API\n\n### Setters\n\n```javascript\nvar color = Color(\"rgb(255, 255, 255)\")\nvar color = Color({r: 255, g: 255, b: 255})\nvar color = Color().rgb(255, 255, 255)\nvar color = Color().rgb([255, 255, 255])\n```\nPass any valid CSS color string into `Color()` or a hash of values. Also load in color values with `rgb()`, `hsl()`, `hsv()`,and `cmyk()`.\n\n```javascript\ncolor.red(120)\n```\nSet the values for individual channels with `alpha`, `red`, `green`, `blue`, `hue`, `saturation` (hsl), `saturationv` (hsv), `lightness`, `cyan`, `magenta`, `yellow`, `black`\n\n### Getters\n\n\n```javascript\ncolor.rgb()       // {r: 255, g: 255, b: 255}\n```\nGet a hash of the rgb values with `rgb()`, similarly for `hsl()`, `hsv()`, and `cmyk()`\n\n```javascript\ncolor.rgbArray()  // [255, 255, 255]\n```\nGet an array of the values with `rgbArray()`, `hslArray()`, `hsvArray()`, and `cmykArray()`.\n\n```javascript\ncolor.red()       // 255\n```\nGet the value for an individual channel.\n\n### CSS Strings\n\n```javascript\ncolor.hslString()  // \"hsl(320, 50%, 100%)\"\n```\n\nDifferent CSS String formats for the color are on `hexString`, `rgbString`, `percentString`, `hslString`, and `keyword` (undefined if it's not a keyword color). `\"rgba\"` and `\"hsla\"` are used if the current alpha value of the color isn't `1`.\n\n### Luminosity\n\n```javascript\ncolor.luminosity();  // 0.412\n```\nThe [WCAG luminosity](http://www.w3.org/TR/WCAG20/#relativeluminancedef) of the color. 0 is black, 1 is white.\n\n```javascript\ncolor.contrast(Color(\"blue\"))  // 12\n```\nThe [WCAG contrast ratio](http://www.w3.org/TR/WCAG20/#contrast-ratiodef) to another color, from 1 (same color) to 21 (contrast b/w white and black).\n\n```javascript\ncolor.light();  // true\ncolor.dark();   // false\n```\nGet whether the color is \"light\" or \"dark\", useful for deciding text color.\n\n### Manipulation\n\n```javascript\ncolor.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\n\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\n\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\ncolor.greyscale()      // #5CBF54 -> #969696\n\ncolor.clearer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\n\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\n\ncolor.mix(Color(\"yellow\"))   // cyan -> rgb(128, 255, 128)\n\n// chaining\ncolor.green(100).greyscale().lighten(0.6)\n```\n\n### Clone\n\nYou can can create a copy of an existing color object using `clone()`:\n\n```javascript\ncolor.clone() // -> New color object\n```\n\nAnd more to come...\n\n## Propers\n\nThe API was inspired by [color-js](https://github.com/brehaut/color-js). Manipulation functions by CSS tools like Sass, LESS, and Stylus.\n","readmeFilename":"README.md","_id":"color@0.5.0","dist":{"shasum":"4d283d8bfe4cbc7006de6b6d25a3c26f00e3ee6d","tarball":"http://registry.npmjs.org/color/-/color-0.5.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}}},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"time":{"modified":"2013-11-18T02:48:04.332Z","created":"2011-06-23T03:09:53.739Z","0.1.0":"2011-06-23T03:09:54.511Z","0.1.1":"2011-06-23T16:42:17.743Z","0.1.2":"2011-06-24T02:35:44.115Z","0.1.3":"2011-06-27T05:33:12.820Z","0.2.0":"2011-06-27T20:10:51.343Z","0.3.0":"2011-06-28T02:17:14.939Z","0.4.0":"2011-08-31T02:00:45.377Z","0.4.1":"2011-10-16T17:13:33.102Z","0.4.2":"2013-02-14T20:05:40.866Z","0.4.3":"2013-04-07T20:22:17.968Z","0.4.4":"2013-04-07T20:24:58.848Z","0.5.0":"2013-11-18T02:48:04.332Z"},"author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/color.git"},"_attachments":{},"_etag":"\"E3D539NTAFU1CW17Y5HA0ZHXN\""}